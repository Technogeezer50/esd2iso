w11arm_esd2iso - a utility to build Windows 11 ARM installation ISOs from Microsoft ESD files

SUMMARY
=======

This utility creates ISO installation media for Windows 11 ARM from ESD files in
Microsoft's software distribution infrastructure. The resulting ISO can be used to
install Windows 11 ARM virtual machines on any virtualization solution that supports
arm64 architectures such as VMware Fusion on Apple Silicon Macs. 
		
USAGE
=====

	w11arm_esd2iso [-v]
	w11arm_esd2iso [-v] -r *work-dir*
	w11arm_esd2iso [-Vh]

DESCRIPTION
===========

In the first form, a Windows 11 ARM ESD (Electronic Software Distribution) file
is downloaded from Microsoft, and converted to ISO.
	
The utility will prompt for the type of ISO to produce (either Home/Pro or Pro/Enterprise)
and the language for the created ISO. A list of the available languages will be provided
to assist in making the ISO language selection. 

The generated ISO file is placed in the current working directory. The utility
will display the name of the generated ISO file.

In the second form, a failed ISO creation due to an interrupted network download
of the ESD from Microsoft will be restarted. The ESD download will be restarted
from the point of the network interruption and the ISO creation process will continue
once the download completes.

For the second form, the *work-dir* argument is required, and is expected to refer to
a directory containg temp files created by a prior failed execution of the utility.
The utility checks to see that the folder contains the proper contents.  

In the third form, the utility will either print out it's version or a synopsis of 
command line options, and immediately exit without performing any ISO build.
	
OPTIONS
=======

	-h		: Print a synopsis of usage and exit.
	-r *work-dir*	: Resume an interrupted ESD download using the information 
			  from the work directory *work-dir*. 
	-v		: Enable verbose output. 
	-V		: Print the version of the utility and exit.


FILES
=====
	./esd2iso_work.xxxxxx	: Work directory for ESD download and image creation, 
				  created in the current working directory. The directory
				  contains the downloaded ESD file and other files used during
				  creation of the ISO. It will be deleted upon successful
				  creation of the ISO.


DEPENDENCIES
============

w11arm_esd2iso is written using the BASH shell, and should run on any reasonably current 
macOS or Linux systems. It should run on both Intel and arm64 architecture systems.

w11arm_esd2iso requires the followng utilities in order to create the ISO from the 
Microsoft ESD file:

	* xpath
	* shasum
	* wimlib-imagex
	* cabextract
	* aria2c
	* mkisofs

For Mac Users
-------------

macOS includes both xpath and shasum. 

IMPORTANT: w11arm_esd2iso does not bundle wimlib-imagex, cabextract, aria2c, or mkisofs.
           You must install them yourself.
           This is different than the versions that were found on the VMware site.

To install packages containing the required utilities from Homebrew:

	brew install wimlib cabextract aria2 cdrtools

To install packages containing the required utilities from MacPorts:

	sudo port install wimlib cabextract aria2 cdrtools

For Linux users
---------------

Most of the utilities should be available in your distribution's repos.
Install them using your package manager if not already installed. 

The exact packages to install will vary among distros. If you don't know which packages 
contain the utility, many distros will give you a hint if you simply type the command 
with no arguments. 

RETURN CODES
============

	0		: Successful creation of the ISO file
	Non-zero 	: Unsuccessful creation of the ISO file
	
NOTES
=====

w11arm_esd2iso only builds ISO media for Windows 11 ARM. It does not build media for any
other version of Windows or Windows Server.

Have at least 12 GB of free disk space to run w11arm_esd2iso. Checks are performed for
sufficient disk space and the utility will refuse to run if space isn't available.

The work directory will be deleted upon successful ISO creation and when most errors are 
encountered. It will not be deleted if a transfer of the ESD can be restarted using the
-r option, or if the final phase of the ESD creation fails.  

If downloads are interrupted due to network issues, the utility will automatically retry
the download from the point of interruption up to 10 times. After 10 retries, the utility
will exit, and will display a command (containing the -r option) that can be copy/pasted 
to resume the ESD download. 

An interrupted download can be restarted with the  -r option as many times as necessary 
as long as the work directory still exists. In all honesty, it shouldn't need to be used 
more than once unless you have a really, really bad network connection. Each restart 
attempt using the -r option will also resume a download from the point of interruption of 
the last execution of the utility. 

The downloaded ESD file will be validated against the SHA1 hash provided by Microsoft. 
If the verification fails (indicating a corrupt download), the utility will exit with an 
error message.
